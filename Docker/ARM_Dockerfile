FROM dustynv/ros:humble-desktop-pytorch-l4t-r35.4.1


WORKDIR /ros2_ws

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      curl gnupg2 lsb-release \
      iputils-ping \
      net-tools \
      build-essential gfortran libatlas-base-dev \
      python3 python3-pip python-is-python3 && \
    rm -rf /var/lib/apt/lists/*


# Install Cyclone DDS
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ros-humble-rmw-cyclonedds-cpp && \
    rm -rf /var/lib/apt/lists/*

# Install RealSense + ROS 2 packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ros-humble-librealsense2* \
      ros-humble-realsense2-camera-msgs \
      ros-humble-tf2-ros\
      ros-humble-tf2-tools\
      ros-humble-realsense2-camera && \
    rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip3 install --no-cache-dir \
      "numpy<2" \
      opencv-python \
      open3d \
      matplotlib \
      transformers \
      google-genai \
      Pillow \
      pyrealsense2



RUN pip3 install --no-cache-dir numpy && \
    wget https://nvidia.box.com/shared/static/fjtbno0vpo676a25cgvuqc1wty0fkkg6.whl -O torch-1.10.0-cp36-cp36m-linux_aarch64.whl && \
    pip3 install --no-cache-dir torch-1.10.0-cp36-cp36m-linux_aarch64.whl && \
    rm torch-1.10.0-cp36-cp36m-linux_aarch64.whl && \
    git clone --branch v0.11.1 https://github.com/pytorch/vision torchvision && \
    cd torchvision && \
    python3 setup.py install && \
    cd .. && \
    rm -rf torchvision

# Install SAM2 repo
WORKDIR /opt/sam2
RUN git clone https://github.com/facebookresearch/sam2.git . && \
    pip3 install --no-cache-dir -e .
WORKDIR /ros2_ws

# Install Ultralytics + CLIP
RUN pip install --no-cache-dir ultralytics \
 && pip install --no-cache-dir git+https://github.com/openai/CLIP.git

# Set CycloneDDS as RMW implementation
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
COPY ./src/vision_pipeline/Docker/CycloneConfigs/cyclonedds_robot.xml /etc/cyclonedds_robot.xml
COPY ./src/vision_pipeline/Docker/CycloneConfigs/cyclonedds_desktop.xml /etc/cyclonedds_desktop.xml
ENV CYCLONEDDS_URI=file:///etc/cyclonedds_desktop.xml




# Entry point script to source and conditionally build
RUN echo '#!/usr/bin/env bash' > /ros_entrypoint.sh && \
    echo 'set -e' >> /ros_entrypoint.sh && \
    echo 'echo "Sourcing ROS 2..."' >> /ros_entrypoint.sh && \
    echo 'source /opt/ros/humble/setup.bash' >> /ros_entrypoint.sh && \
    echo 'if [ -d /ros2_ws/src/vision_pipeline ]; then' >> /ros_entrypoint.sh && \
    echo '  echo "Building vision_pipeline...";' >> /ros_entrypoint.sh && \
    echo '  colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release;' >> /ros_entrypoint.sh && \
    echo 'fi' >> /ros_entrypoint.sh && \
    echo 'if [ -f /ros2_ws/install/setup.bash ]; then' >> /ros_entrypoint.sh && \
    echo '  echo "Sourcing overlay workspace...";' >> /ros_entrypoint.sh && \
    echo '  source /ros2_ws/install/setup.bash;' >> /ros_entrypoint.sh && \
    echo 'fi' >> /ros_entrypoint.sh && \
    echo 'exec "$@"' >> /ros_entrypoint.sh && \
    chmod +x /ros_entrypoint.sh

RUN sudo apt update
RUN sudo apt install --only-upgrade ros-humble-geometry-msgs
RUN sudo apt install ros-humble-image-transport-plugins



ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
